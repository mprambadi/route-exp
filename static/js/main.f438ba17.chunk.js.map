{"version":3,"sources":["page/Login/type.js","page/Login/selector.js","page/Register/type.js","component/HeaderNavigation.js","page/Login/action.js","component/PrivateRoute.js","page/RootRooter.js","page/About/reducer.js","page/Login/reducer.js","page/Register/reducer.js","page/rootreducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","LOGIN_SUCCESS","LOGIN_LOADING","LOGIN_ERRORS","LOGOUT","getAuth","getLoginLoading","state","login","auth","loading","REGISTER_SUCCESS","REGISTER_ERROR","ON_REGISTER","HeaderNavigation","props","_this","Object","_home_aspire_Documents_refactory_vox_vox_map_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_aspire_Documents_refactory_vox_vox_map_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_aspire_Documents_refactory_vox_vox_map_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","toggle","bind","_home_aspire_Documents_refactory_vox_vox_map_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","isOpen","setState","_this$props","logoutAction","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_7__","color","light","expand","dark","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","className","onClick","navbar","React","Component","connect","actions","r","loginAction","loginError","_type__WEBPACK_IMPORTED_MODULE_0__","_ref","values","setFieldError","history","dispatch","loginLoading","setTimeout","password","email","loginSuccess","push","type","payload","component","rest","objectWithoutProperties","react_default","react_router","assign","render","pathname","from","location","Home","lazy","e","then","About","Register","Promise","all","Login","Profile","Dashboard","RootRooter","react_router_dom","react","reactstrap_es","fallback","path","exact","component_PrivateRoute","initialState","combineReducers","about","arguments","length","undefined","objectSpread","register","persistConfig","key","storage","whitelist","middleware","thunk","persistedReducer","persistReducer","rootreducer","store","createStore","applyMiddleware","apply","persistor","persistStore","App","es","integration_react","Fragment","page_RootRooter","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAO,IAAMH,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAe,eACfC,EAAS,0CCHtBN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAO,IAAMD,EAAU,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,MAC/BH,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,MAAME,0CCDpDZ,EAAAC,EAAAC,EAAA,sBAAAW,IAAAb,EAAAC,EAAAC,EAAA,sBAAAY,IAAAd,EAAAC,EAAAC,EAAA,sBAAAa,IAAO,IAAMF,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAc,kKCiBrBC,cACL,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,OAASP,EAAKO,OAAOC,KAAZP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACdA,EAAKT,MAAQ,CACZmB,QAAQ,GALSV,wEASlBG,KAAKQ,SAAS,CACbD,QAASP,KAAKZ,MAAMmB,0CAGb,IAAAE,EACuBT,KAAKJ,MAA5BN,EADAmB,EACAnB,KAAMoB,EADND,EACMC,aAEd,OACCC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,OAAK,EAACC,OAAO,KAAKC,MAAI,GAC7CP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACCH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,GAAG,IAAIC,UAAU,gBAA1B,MAGAV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeQ,QAAStB,KAAKI,SAC7BO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUP,OAAQP,KAAKZ,MAAMmB,OAAQgB,QAAM,GAC1CZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKO,UAAU,UAAUE,QAAM,GAC9BZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACExB,GACAqB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,GAAG,aAAaC,UAAU,YAAnC,cAKFV,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACExB,GACAqB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,GAAG,WAAWC,UAAU,YAAjC,YAMFV,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACExB,EACAqB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACCC,GAAG,SACHC,UAAU,WACVC,QAAS,kBAAMZ,MAHhB,UAQAC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,GAAG,SAASC,UAAU,YAA/B,UAMD/B,GACAqB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,GAAG,SAASC,UAAU,YAA/B,qBA3DsBG,IAAMC,WAwFtBC,gBAJS,SAAAtC,GAAK,MAAK,CACjCE,KAAMJ,YAAQE,KAKduC,EAFcD,CAGb/B,oCC9GFhB,EAAAiD,EAAA/C,GAAAF,EAAAC,EAAAC,EAAA,gCAAAgD,IAAAlD,EAAAC,EAAAC,EAAA,iCAAA6B,IAAA/B,EAAAC,EAAAC,EAAA,+BAAAiD,IAAA,IAAAC,EAAApD,EAAA,IAEakD,EAAc,SAAAG,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,cAAeC,EAA1BH,EAA0BG,QAA1B,OAAwC,SAAAC,GAClEA,EAASC,KACTC,WAAW,WACc,SAApBL,EAAOM,WACVL,EAAc,WAAY,sBAC1BE,EAASN,MAEW,mBAAjBG,EAAOO,QACVN,EAAc,QAAS,mBACvBE,EAASN,MAGW,mBAAjBG,EAAOO,OAAkD,SAApBP,EAAOM,WAC/CH,EAASK,KACTN,EAAQO,KAAK,gBAEZ,OAGShC,EAAe,iBAAO,CAChCiC,KAAK1D,MAGFwD,EAAe,SAAAG,GAAO,MAAK,CAChCD,KAAM7D,IACN8D,YAGYd,EAAa,SAAAc,GAAO,MAAK,CACrCD,KAAM3D,IACN4D,YAGKP,EAAe,iBAAO,CAC3BM,KAAM5D,+QCXP,IAIe2C,cAJS,SAAAtC,GAAK,MAAK,CACjCE,KAAMJ,YAAQE,KAGAsC,CAxBf,SAAAM,GAAyD,IAAtBP,EAAsBO,EAAjCa,UAAyBC,EAAQhD,OAAAiD,EAAA,EAAAjD,CAAAkC,EAAA,eACxD,OACCgB,EAAApC,EAAAC,cAACoC,EAAA,EAADnD,OAAAoD,OAAA,GACKJ,EADL,CAECK,OAAQ,SAAAvD,GAAK,OACZkD,EAAKxD,KACJ0D,EAAApC,EAAAC,cAACY,EAAc7B,GAEfoD,EAAApC,EAAAC,cAACoC,EAAA,EAAD,CACC7B,GAAI,CACHgC,SAAU,SACVhE,MAAO,CAAEiE,KAAMzD,EAAM0D,mBCVtBC,EAAOC,eAAK,kBAAM7E,EAAA8E,EAAA,GAAAC,KAAA/E,EAAA0B,KAAA,aAClBsD,EAAQH,eAAK,kBAAM7E,EAAA8E,EAAA,GAAAC,KAAA/E,EAAA0B,KAAA,aACnBuD,EAAWJ,eAAK,kBAAMK,QAAAC,IAAA,CAAAnF,EAAA8E,EAAA,GAAA9E,EAAA8E,EAAA,KAAAC,KAAA/E,EAAA0B,KAAA,aACtB0D,EAAQP,eAAK,kBAAMK,QAAAC,IAAA,CAAAnF,EAAA8E,EAAA,GAAA9E,EAAA8E,EAAA,KAAAC,KAAA/E,EAAA0B,KAAA,aACnB2D,EAAUR,eAAK,kBAAM7E,EAAA8E,EAAA,GAAAC,KAAA/E,EAAA0B,KAAA,aACrB4D,EAAYT,eAAK,kBAAI7E,EAAA8E,EAAA,GAAAC,KAAA/E,EAAA0B,KAAA,aAyBZ6D,EAvBI,WAClB,OACClB,EAAApC,EAAAC,cAACsD,EAAA,EAAD,KACCnB,EAAApC,EAAAC,cAACuD,EAAA,SAAD,KACCpB,EAAApC,EAAAC,cAAClB,EAAA,EAAD,MACAqD,EAAApC,EAAAC,cAACwD,EAAA,EAAD,KACCrB,EAAApC,EAAAC,cAACuD,EAAA,SAAD,CAAUE,SAAUtB,EAAApC,EAAAC,cAAA,uBACnBmC,EAAApC,EAAAC,cAACoC,EAAA,EAAD,KACCD,EAAApC,EAAAC,cAACoC,EAAA,EAAD,CAAOsB,KAAK,IAAIC,OAAK,EAAC3B,UAAWU,IACjCP,EAAApC,EAAAC,cAACoC,EAAA,EAAD,CAAOsB,KAAK,SAAS1B,UAAWc,IAChCX,EAAApC,EAAAC,cAACoC,EAAA,EAAD,CAAOsB,KAAK,YAAY1B,UAAWe,IACnCZ,EAAApC,EAAAC,cAACoC,EAAA,EAAD,CAAOsB,KAAK,SAAS1B,UAAWkB,IAChCf,EAAApC,EAAAC,cAAC4D,EAAD,CAAcF,KAAK,aAAa1B,UAAWoB,IAC3CjB,EAAApC,EAAAC,cAAC4D,EAAD,CAAcF,KAAK,WAAW1B,UAAWmB,IACzChB,EAAApC,EAAAC,cAAC4D,EAAD,CAAcF,KAAK,aAAa1B,UAAWoB,kDCzB5CS,EAAe,WCAfA,EAAe,CACpBpF,MAAM,EACNC,SAAS,WCFJmF,EAAe,CACpBnF,SAAS,GCEKoF,cAAgB,CAC9BC,MHAc,WAA6C,IAA5CxF,EAA4CyF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApCH,EAAoC1C,EAAA6C,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAApBpC,EAAoBX,EAApBW,KAAMC,EAAcZ,EAAdY,QAC5C,OAAQD,GAER,IATmB,QAUjB,OAAO7C,OAAAkF,EAAA,EAAAlF,CAAA,GAAKV,EAAUwD,GAExB,QACE,OAAOxD,IGNRC,MFAY,WAA6C,IAA5CD,EAA4CyF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApCH,EAAoC1C,EAAA6C,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAApBpC,EAAoBX,EAApBW,KAAoBX,EAAdY,QAC7C,OAAQD,GACP,KAAK7D,IACJ,OAAOgB,OAAAkF,EAAA,EAAAlF,CAAA,GAAKV,EAAZ,CAAmBE,MAAM,EAAMC,SAAS,IACzC,KAAKR,IACJ,OAAOe,OAAAkF,EAAA,EAAAlF,CAAA,GAAKV,EAAZ,CAAmBG,SAAS,IAC7B,KAAKP,IACJ,OAAOc,OAAAkF,EAAA,EAAAlF,CAAA,GAAKV,EAAZ,CAAmBG,SAAS,IAC7B,KAAKN,IACJ,OAAOa,OAAAkF,EAAA,EAAAlF,CAAA,GAAKV,EAAZ,CAAmBE,MAAM,IAC1B,QACC,OAAOF,IEVP6F,SDFY,WAA6C,IAA5C7F,EAA4CyF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApCH,EAAoC1C,EAAA6C,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAApBpC,EAAoBX,EAApBW,KAAoBX,EAAdY,QAC7C,OAAQD,GACP,KAAKjD,IACJ,OAAOI,OAAAkF,EAAA,EAAAlF,CAAA,GAAKV,EAAZ,CAAmBG,SAAS,IAC7B,KAAKC,IAEL,KAAKC,IACJ,OAAOK,OAAAkF,EAAA,EAAAlF,CAAA,GAAKV,EAAZ,CAAmBG,SAAS,IAE7B,QACC,OAAOH,cEVJ8F,EAAgB,CACrBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGPC,EAAa,CAACC,KACdC,EAAmBC,YAAeP,EAAeQ,GAE1CC,EAAQC,YACpBJ,EACAK,IAAeC,WAAf,EAAmBR,IAEPS,EAAYC,YAAaL,WCAvBM,EAZH,WACX,OACCjD,EAAApC,EAAAC,cAACqF,EAAA,EAAD,CAAUP,MAAOA,GACf3C,EAAApC,EAAAC,cAACsF,EAAA,EAAD,CAAa5G,QAAS,KAAMwG,UAAWA,GACxC/C,EAAApC,EAAAC,cAACmC,EAAApC,EAAMwF,SAAP,KACEpD,EAAApC,EAAAC,cAACwF,EAAD,MADF,QCCiBC,QACW,cAA7BC,OAAOjD,SAASkD,UAEe,UAA7BD,OAAOjD,SAASkD,UAEhBD,OAAOjD,SAASkD,SAASC,MACvB,6ECTNC,IAASvD,OAAOH,EAAApC,EAAAC,cAAC8F,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtD,KAAK,SAAAuD,GACjCA,EAAaC","file":"static/js/main.f438ba17.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_LOADING = 'LOGIN_LOADING'\nexport const LOGIN_ERRORS = 'LOGIN_ERRORS'\nexport const LOGOUT = 'LOGOUT'","export const getAuth = state => state.login.auth\nexport const getLoginLoading = state => state.login.loading","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_ERROR = 'REGISTER_ERROR'\nexport const ON_REGISTER = 'ON_REGISTER_SUCCESS'","import React from \"react\";\nimport {\n\tCollapse,\n\tNavbar,\n\tNavbarToggler,\n\tNav,\n\tNavItem,\n\tUncontrolledDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem,\n\tContainer\n} from \"reactstrap\";\n\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getAuth } from \"../page/Login/selector\";\nimport * as actions from \"../page/Login/action\";\n\nclass HeaderNavigation extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.toggle = this.toggle.bind(this);\n\t\tthis.state = {\n\t\t\tisOpen: false\n\t\t};\n\t}\n\ttoggle() {\n\t\tthis.setState({\n\t\t\tisOpen: !this.state.isOpen\n\t\t});\n\t}\n\trender() {\n\t\tconst { auth, logoutAction } = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar color=\"success\" light expand=\"md\" dark>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<NavLink to=\"/\" className=\"navbar-brand\">\n\t\t\t\t\t\t\tRR\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavbarToggler onClick={this.toggle} />\n\t\t\t\t\t\t<Collapse isOpen={this.state.isOpen} navbar>\n\t\t\t\t\t\t\t<Nav className=\"ml-auto\" navbar>\n\t\t\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t\t\t{auth && (\n\t\t\t\t\t\t\t\t\t\t<NavLink to=\"/dashboard\" className=\"nav-link\">\n\t\t\t\t\t\t\t\t\t\t\tDashboard\n\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t\t\t{auth && (\n\t\t\t\t\t\t\t\t\t\t<NavLink to=\"/profile\" className=\"nav-link\">\n\t\t\t\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</NavItem>\n\n\t\t\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t\t\t{auth ? (\n\t\t\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\t\t\tto=\"/login\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => logoutAction()}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<NavLink to=\"/login\" className=\"nav-link\">\n\t\t\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</NavItem>\n\n\t\t\t\t\t\t\t\t{auth || (\n\t\t\t\t\t\t\t\t\t<NavLink to=\"/about\" className=\"nav-link\">\n\t\t\t\t\t\t\t\t\t\tAbout\n\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t{/* <UncontrolledDropdown nav inNavbar>\n\t\t\t\t\t\t\t\t\t<DropdownToggle nav caret>\n\t\t\t\t\t\t\t\t\t\tOptions\n\t\t\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t\t\t<DropdownMenu right>\n\t\t\t\t\t\t\t\t\t\t<DropdownItem>Option 1</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t<DropdownItem>Option 2</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t<DropdownItem divider />\n\t\t\t\t\t\t\t\t\t\t<DropdownItem>Reset</DropdownItem>\n\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t</UncontrolledDropdown> */}\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t</Container>\n\t\t\t\t</Navbar>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tauth: getAuth(state)\n});\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(HeaderNavigation);\n","import { LOGIN_SUCCESS, LOGIN_LOADING, LOGIN_ERRORS, LOGOUT } from \"./type\";\n\nexport const loginAction = ({ values, setFieldError, history }) => dispatch => {\n\tdispatch(loginLoading());\n\tsetTimeout(() => {\n\t\tif (values.password !== \"coba\") {\n\t\t\tsetFieldError(\"password\", \"Password Not Match\");\n\t\t\tdispatch(loginError());\n\t\t}\n\t\tif (values.email !== \"coba@gmail.com\") {\n\t\t\tsetFieldError(\"email\", \"email not found\");\n\t\t\tdispatch(loginError());\n\t\t}\n\n\t\tif (values.email === \"coba@gmail.com\" && values.password === \"coba\") {\n\t\t\tdispatch(loginSuccess());\n\t\t\thistory.push(\"/dashboard\");\n\t\t}\n\t}, 1000);\n};\n\nexport const logoutAction = () => ({\n   type:LOGOUT\n})\n\nconst loginSuccess = payload => ({\n\ttype: LOGIN_SUCCESS,\n\tpayload\n});\n\nexport const loginError = payload => ({\n\ttype: LOGIN_ERRORS,\n\tpayload\n});\n\nconst loginLoading = () => ({\n\ttype: LOGIN_LOADING\n});\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getAuth } from \"../page/Login/selector\";\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={props =>\n\t\t\t\trest.auth ? (\n\t\t\t\t\t<Component {...props} />\n\t\t\t\t) : (\n\t\t\t\t\t<Redirect\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: \"/login\",\n\t\t\t\t\t\t\tstate: { from: props.location }\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t/>\n\t);\n}\n\nconst mapStateToProps = state => ({\n\tauth: getAuth(state)\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Suspense, lazy, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\nimport HeaderNavigation from \"../component/HeaderNavigation\";\nimport PrivateRoute from \"../component/PrivateRoute\";\n\nconst Home = lazy(() => import(\"./Home\"));\nconst About = lazy(() => import(\"./About\"));\nconst Register = lazy(() => import(\"./Register\"));\nconst Login = lazy(() => import(\"./Login\"));\nconst Profile = lazy(() => import(\"./Profile\"));\nconst Dashboard = lazy(()=>import('./Dashboard'))\n\nconst RootRooter = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Fragment>\n\t\t\t\t<HeaderNavigation />\n\t\t\t\t<Container>\n\t\t\t\t\t<Suspense fallback={<div>Loading</div>}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t\t\t<Route path=\"/about\" component={About} />\n\t\t\t\t\t\t\t<Route path=\"/register\" component={Register} />\n\t\t\t\t\t\t\t<Route path=\"/login\" component={Login} />\n\t\t\t\t\t\t\t<PrivateRoute path=\"/dashboard\" component={Dashboard} />\n\t\t\t\t\t\t\t<PrivateRoute path=\"/profile\" component={Profile} />\n\t\t\t\t\t\t\t<PrivateRoute path=\"/dashboard\" component={Dashboard} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Suspense>\n\t\t\t\t</Container>\n\t\t\t</Fragment>\n\t\t</Router>\n\t);\n};\n\nexport default RootRooter;\n","export const ABOUT = 'ABOUT'\n\nconst initialState = {\n\n}\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n\n  case ABOUT:\n    return { ...state, ...payload }\n\n  default:\n    return state\n  }\n}\n","import { LOGIN_SUCCESS, LOGIN_LOADING, LOGIN_ERRORS, LOGOUT } from \"./type\";\n\nconst initialState = {\n\tauth: false,\n\tloading: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n\tswitch (type) {\n\t\tcase LOGIN_SUCCESS:\n\t\t\treturn { ...state, auth: true, loading: false };\n\t\tcase LOGIN_LOADING:\n\t\t\treturn { ...state, loading: true };\n\t\tcase LOGIN_ERRORS:\n\t\t\treturn { ...state, loading: false };\n\t\tcase LOGOUT:\n\t\t\treturn { ...state, auth: false };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { ON_REGISTER, REGISTER_SUCCESS, REGISTER_ERROR } from \"./type\";\n\nconst initialState = {\n\tloading: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n\tswitch (type) {\n\t\tcase ON_REGISTER:\n\t\t\treturn { ...state, loading: true };\n\t\tcase REGISTER_SUCCESS:\n\t\t\treturn { ...state, loading: false };\n\t\tcase REGISTER_ERROR:\n\t\t\treturn { ...state, loading: false };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { combineReducers } from \"redux\";\nimport about from \"./About/reducer\";\nimport login from \"./Login/reducer\";\nimport register from './Register/reducer'\n\nexport default combineReducers({\n\tabout,\n   login,\n   register\n});\n\n","import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootreducer from \"./page/rootreducer\";\nimport thunk from \"redux-thunk\";\n\nconst persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\twhitelist: [\"login\"]\n};\n\nconst middleware = [thunk];\nconst persistedReducer = persistReducer(persistConfig, rootreducer);\n\nexport const store = createStore(\n\tpersistedReducer,\n\tapplyMiddleware(...middleware)\n);\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport \"./App.css\";\nimport RootRooter from \"./page/RootRooter\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst App = () => {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t\t<PersistGate loading={null} persistor={persistor} >\n\t\t\t<React.Fragment>\n\t\t\t\t\t<RootRooter />;\n\t\t\t</React.Fragment>\n\t\t\t\t</PersistGate>\n\t\t</Provider>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./loading.css\";\nimport \"./loading-btn.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}