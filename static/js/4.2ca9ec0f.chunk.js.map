{"version":3,"sources":["page/Register/action.js","page/Register/selector.js","page/Register/index.js"],"names":["registerAction","_ref","values","setFieldError","history","dispatch","onRegister","setTimeout","email","registerError","registerSuccess","push","payload","type","REGISTER_SUCCESS","ON_REGISTER","REGISTER_ERROR","getRegisterLoading","state","register","loading","Register","_this$props","this","props","touched","errors","handleChange","handleBlur","isValid","handleSubmit","react_default","a","createElement","reactstrap_es","className","sm","md","size","offset","onSubmit","for","onChange","onBlur","value","name","id","placeholder","valid","invalid","password","color","concat","disabled","Component","LoginSchema","Yup","shape","min","max","required","myEnhancedForm","withFormik","mapPropsToValues","validationSchema","setFieldValue","_ref$props","compose","connect","actions"],"mappings":"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","file":"static/js/4.2ca9ec0f.chunk.js","sourcesContent":["import { ON_REGISTER, REGISTER_SUCCESS, REGISTER_ERROR } from \"./type\";\n\nexport const registerAction = ({\n\tvalues,\n\tsetFieldError,\n\thistory\n}) => dispatch => {\n\tdispatch(onRegister());\n\tsetTimeout(() => {\n\t\tif (values.email === \"coba@gmail.com\") {\n\t\t\tsetFieldError(\"email\", \"email has used\");\n\t\t\tdispatch(registerError());\n\t\t\treturn;\n\t\t}\n\n\t\tdispatch(registerSuccess());\n\t\thistory.push(\"/dashboard\");\n\t}, 1000);\n};\n\nexport const registerSuccess = payload => ({\n\ttype: REGISTER_SUCCESS,\n\tpayload\n});\n\nexport const onRegister = () => ({\n\ttype: ON_REGISTER\n});\n\nexport const registerError = payload => ({\n\ttype: REGISTER_ERROR,\n\tpayload\n});\n","export const getRegisterLoading = state => state.register.loading","import React, { Component } from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, FormGroup, Label, Input, FormFeedback } from \"reactstrap\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport * as actions from \"./action\";\nimport { getRegisterLoading } from \"./selector\";\n\nclass Register extends Component {\n\trender() {\n\t\tconst {\n\t\t\tvalues,\n\t\t\ttouched,\n\t\t\terrors,\n\t\t\thandleChange,\n\t\t\thandleBlur,\n\t\t\tisValid,\n\t\t\thandleSubmit,\n\t\t\tloading\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<Row className=\"mt-5\">\n\t\t\t\t<Col sm=\"12\" md={{ size: 4, offset: 4 }}>\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label for=\"exampleEmail\">Email</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tid=\"exampleEmail\"\n\t\t\t\t\t\t\t\tplaceholder=\"email\"\n\t\t\t\t\t\t\t\tvalid={!errors.email && touched.email}\n\t\t\t\t\t\t\t\tinvalid={errors.email && touched.email}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<FormFeedback>{errors.email}</FormFeedback>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label for=\"examplePassword\">Password</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\tid=\"examplePassword\"\n\t\t\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\t\t\tvalid={!errors.password && touched.password}\n\t\t\t\t\t\t\t\tinvalid={errors.password && touched.password}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormFeedback>{errors.password}</FormFeedback>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclassName={`btn btn-block btn-primary ld-ext-right ${loading &&\n\t\t\t\t\t\t\t\t\"running\"}`}\n\t\t\t\t\t\t\tdisabled={!isValid || loading}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t<div className=\"ld ld-ring ld-spin\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nconst LoginSchema = Yup.object().shape({\n\tpassword: Yup.string()\n\t\t.min(2, \"Too Short!\")\n\t\t.max(70, \"Too Long!\")\n\t\t.required(\"Required\"),\n\temail: Yup.string()\n\t\t.email(\"Invalid email\")\n\t\t.required(\"Required\")\n});\nconst myEnhancedForm = withFormik({\n\tmapPropsToValues: () => ({\n\t\temail: \"coba@gmail.com\",\n\t\tpassword: \"\",\n\t\tloading: false\n\t}),\n\tvalidationSchema: LoginSchema,\n\thandleSubmit: (\n\t\tvalues,\n\t\t{ setFieldValue, setFieldError, props: { history, registerAction } }\n\t) => {\n\t\tregisterAction({ values, setFieldError, setFieldValue, history });\n\t}\n});\n\nconst mapStateToProps = state => ({\n\tloading: getRegisterLoading(state)\n});\n\nexport default compose(\n\tconnect(\n\t\tmapStateToProps,\n\t\tactions\n\t),\n\tmyEnhancedForm\n)(Register);\n"],"sourceRoot":""}